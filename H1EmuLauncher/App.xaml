<Application x:Class="H1EmuLauncher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             Startup="ApplicationStartup">

    <Application.Resources>
        <ResourceDictionary>

            <!-- Load dictionary into xaml resources just so we can see on the designer -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Language\StringResources.en-EN.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <FontFamily x:Key="Signika">pack://application:,,,/Fonts/#Signika</FontFamily>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="True"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1"/>
                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HyperLinkStyle" TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="DarkGray"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HyperLinkStyleRun" TargetType="Run">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="DarkGray"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyleFirst">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
                                    Background="#16161b"
                                    CornerRadius="5,0,0,0"
                                    VerticalAlignment="Bottom"
                                    Height="30">

                                <Border CornerRadius="5,0,0,0">
                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>

                                    <Grid>
                                        <TextBlock x:Name="text"
                                                   Foreground="Gray"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center">
        
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="10,5,10,7"/>
                                        </TextBlock>

                                        <Rectangle x:Name="underline"
                                                   Fill="#DB111C"
                                                   Height="2"
                                                   VerticalAlignment="Bottom"
                                                   Visibility="Collapsed"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="text" Property="Foreground" Value="FloralWhite"/>
                                    <Setter TargetName="underline" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="border" Property="Height" Value="32"/>
                                    <Setter TargetName="border" Property="Background" Value="#1C1B22"/>
                                    <Setter TargetName="border" Property="CornerRadius" Value="5,5,0,0"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="text" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="text" Property="Foreground" Value="#B3B3B3" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyleMiddle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
                                    Background="#16161b"
                                    VerticalAlignment="Bottom"
                                    Height="30">

                                <Grid>
                                    <Grid.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Grid.Background>

                                    <TextBlock x:Name="text"
                                               Foreground="Gray"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                        
                                        <ContentPresenter ContentSource="Header"
                                                          Margin="10,5,10,7"/>
                                    </TextBlock>

                                    <Rectangle x:Name="underline"
                                               Fill="#DB111C"
                                               Height="2"
                                               VerticalAlignment="Bottom"
                                               Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="text" Property="Foreground" Value="FloralWhite"/>
                                    <Setter TargetName="underline" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="border" Property="Height" Value="32"/>
                                    <Setter TargetName="border" Property="Background" Value="#1C1B22"/>
                                    <Setter TargetName="border" Property="CornerRadius" Value="5,5,0,0"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="text" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="text" Property="Foreground" Value="#B3B3B3" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyleLast">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
                                    Background="#16161b"
                                    CornerRadius="0,5,0,0"
                                    VerticalAlignment="Bottom"
                                    Height="30">

                                <Border CornerRadius="0,5,0,0">
                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>

                                    <Grid>
                                        <TextBlock x:Name="text"
                                                   Foreground="Gray"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center">
                        
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="10,5,10,7"/>
                                        </TextBlock>

                                        <Rectangle x:Name="underline"
                                                   Fill="#DB111C"
                                                   Height="2"
                                                   VerticalAlignment="Bottom"
                                                   Visibility="Collapsed"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="text" Property="Foreground" Value="FloralWhite"/>
                                    <Setter TargetName="underline" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="border" Property="Height" Value="32"/>
                                    <Setter TargetName="border" Property="Background" Value="#1C1B22"/>
                                    <Setter TargetName="border" Property="CornerRadius" Value="5,5,0,0"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="text" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="text" Property="Foreground" Value="#B3B3B3" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent"
                                    CornerRadius="10">
                                
                                <StackPanel Orientation="Horizontal">
                                    <Border x:Name="background"
                                            Background="#FF2A2A32"
                                            CornerRadius="10"
                                            Width="38">
                                        
                                        <Border CornerRadius="10"
                                                Width="38">
                                            
                                            <Border.Background>
                                                <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                            </Border.Background>

                                            <Border x:Name="ellipse"
                                                    HorizontalAlignment="Left"
                                                    CornerRadius="8"
                                                    Margin="2"
                                                    Background="#1C1B22">

                                                <Ellipse Width="16">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                                    </Ellipse.Fill>
                                                    
                                                    <Ellipse.Effect>
                                                        <DropShadowEffect BlurRadius="15"
                                                                          Direction="-90"
                                                                          RenderingBias="Quality"
                                                                          ShadowDepth="0"
                                                                          Opacity="0.6"/>

                                                    </Ellipse.Effect>
                                                </Ellipse>
                                            </Border>
                                        </Border>
                                    </Border>
                                    
                                    <TextBlock x:Name="text"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Right"
                                               Margin="10,2,0,0"
                                               Foreground="FloralWhite"
                                               Text="{DynamicResource item204}">

                                    </TextBlock>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="text" Property="Text" Value="{DynamicResource item203}"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="background"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#DB111C" Duration="0:0:0.2"/>

                                            <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="20,2,2,2"
                                                                Duration="0:0:0.2"
                                                                DecelerationRatio="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="background"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#FF2A2A32" Duration="0:0:0.2"/>

                                            <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="2"
                                                                Duration="0:0:0.2"
                                                                DecelerationRatio="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}" x:Key="CustomMenuItem">
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="Icon" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Background="#1C1B22" Margin="10,0,10,0">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter ContentSource="Icon" Width="12" Height="12" RenderOptions.BitmapScalingMode="Fant" Margin="0,0,8,0" VerticalAlignment="Center"/>
                                    <ContentPresenter ContentSource="Header" VerticalAlignment="Center" Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="LightGray"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="DarkGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Separator}" x:Key="SeparatorMenuItem">
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border>
                                <Rectangle Height="1" Fill="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border" Background="#1C1B22" BorderBrush="#444444" BorderThickness="1">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="NextButton.Static.Background" ImageSource="Resources\NextButton.png"/>
            <SolidColorBrush x:Key="NextButton.Static.Border" Color="Transparent"/>
            <ImageBrush x:Key="NextButton.MouseOver.Background" ImageSource="Resources\NextButton_Hover.png"/>
            <SolidColorBrush x:Key="NextButton.MouseOver.Border" Color="Transparent"/>
            <ImageBrush x:Key="NextButton.Pressed.Background" ImageSource="Resources\NextButton_Pressed.png"/>
            <SolidColorBrush x:Key="NextButton.Pressed.Border" Color="Transparent"/>
            <ImageBrush x:Key="NextButton.Disabled.Background" ImageSource="Resources\NextButton_Pressed.png"/>
            <SolidColorBrush x:Key="NextButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="NextButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="CarouselButtonNext" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource NextButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource NextButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                                <Border x:Name="nextImageButtonContent">
                                    <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource NextButton.MouseOver.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource NextButton.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource NextButton.Pressed.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource NextButton.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource NextButton.Disabled.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource NextButton.Disabled.Border}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource NextButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="PreviousButton.Static.Background" ImageSource="Resources\PrevButton.png"/>
            <SolidColorBrush x:Key="PreviousButton.Static.Border" Color="Transparent"/>
            <ImageBrush x:Key="PreviousButton.MouseOver.Background" ImageSource="Resources\PrevButton_Hover.png"/>
            <SolidColorBrush x:Key="PreviousButton.MouseOver.Border" Color="Transparent"/>
            <ImageBrush x:Key="PreviousButton.Pressed.Background" ImageSource="Resources\PrevButton_Pressed.png"/>
            <SolidColorBrush x:Key="PreviousButton.Pressed.Border" Color="Transparent"/>
            <ImageBrush x:Key="PreviousButton.Disabled.Background" ImageSource="Resources\PrevButton_Pressed.png"/>
            <SolidColorBrush x:Key="PreviousButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="PreviousButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="CarouselButtonPrevious" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource PreviousButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PreviousButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                                <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource PreviousButton.MouseOver.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PreviousButton.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource PreviousButton.Pressed.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PreviousButton.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource PreviousButton.Disabled.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PreviousButton.Disabled.Border}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource PreviousButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="ShowKeyButton.Static.Background" ImageSource="Resources\ShowKey.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="ShowKeyButton.Static.Border" Color="Transparent"/>
            <ImageBrush x:Key="ShowKeyButton.MouseOver.Background" ImageSource="Resources\ShowKey_Hover.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="ShowKeyButton.MouseOver.Border" Color="Transparent"/>
            <ImageBrush x:Key="ShowKeyButton.Pressed.Background" ImageSource="Resources\ShowKey_Pressed.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="ShowKeyButton.Pressed.Border" Color="Transparent"/>
            <ImageBrush x:Key="ShowKeyButton.Disabled.Background" ImageSource="Resources\ShowKey_Pressed.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="ShowKeyButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ShowKeyButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="ShowKeyButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ShowKeyButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ShowKeyButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                                <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ShowKeyButton.MouseOver.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShowKeyButton.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ShowKeyButton.Pressed.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShowKeyButton.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ShowKeyButton.Disabled.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ShowKeyButton.Disabled.Border}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ShowKeyButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="HideKeyButton.Static.Background" ImageSource="Resources\HideKey.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="HideKeyButton.Static.Border" Color="Transparent"/>
            <ImageBrush x:Key="HideKeyButton.MouseOver.Background" ImageSource="Resources\HideKey_Hover.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="HideKeyButton.MouseOver.Border" Color="Transparent"/>
            <ImageBrush x:Key="HideKeyButton.Pressed.Background" ImageSource="Resources\HideKey_Pressed.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="HideKeyButton.Pressed.Border" Color="Transparent"/>
            <ImageBrush x:Key="HideKeyButton.Disabled.Background" ImageSource="Resources\HideKey_Pressed.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="HideKeyButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="HideKeyButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="HideKeyButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource HideKeyButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource HideKeyButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                                <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource HideKeyButton.MouseOver.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource HideKeyButton.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource HideKeyButton.Pressed.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource HideKeyButton.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource HideKeyButton.Disabled.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource HideKeyButton.Disabled.Border}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource HideKeyButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="FolderButton.Static.Background" ImageSource="Resources\Folder.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="FolderButton.Static.Border" Color="Transparent"/>
            <ImageBrush x:Key="FolderButton.MouseOver.Background" ImageSource="Resources\Folder_Hover.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="FolderButton.MouseOver.Border" Color="Transparent"/>
            <ImageBrush x:Key="FolderButton.Pressed.Background" ImageSource="Resources\Folder_Pressed.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="FolderButton.Pressed.Border" Color="Transparent"/>
            <ImageBrush x:Key="FolderButton.Disabled.Background" ImageSource="Resources\Folder_Pressed.png" Stretch="Uniform"/>
            <SolidColorBrush x:Key="FolderButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="FolderButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="FolderButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource FolderButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource FolderButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                                <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource FolderButton.MouseOver.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource FolderButton.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource FolderButton.Pressed.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource FolderButton.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource FolderButton.Disabled.Background}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource FolderButton.Disabled.Border}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource FolderButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#2B2A33"/>
                <GradientStop Offset="1.0" Color="#2B2A33"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="FloralWhite"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#2B2A33"/>
                <GradientStop Offset="1.0" Color="#2B2A33"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="FloralWhite"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#2B2A33"/>
                <GradientStop Offset="1.0" Color="#2B2A33"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#2B2A33"/>
                <GradientStop Offset="1.0" Color="#2B2A33"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="FloralWhite"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#2B2A33"/>
                <GradientStop Offset="1.0" Color="#2B2A33"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="FloralWhite"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="TextBox.Static.Background" Color="Transparent"/>
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    Background="{StaticResource ComboBox.Static.Background}"
                                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">

                                <Border CornerRadius="5">
                                    <Border x:Name="splitBorder"
                                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                            Margin="0"
                                            HorizontalAlignment="Right"
                                            BorderBrush="Transparent"
                                            BorderThickness="1"
                                            CornerRadius="5"
                                            SnapsToDevicePixels="True">
                                        
                                        <Path x:Name="arrow"
                                              Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                              Fill="{StaticResource ComboBox.Static.Glyph}"/>
                                    </Border>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    </Grid.ColumnDefinitions>
                    <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome
                        x:Name="shadow"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Color="Transparent">
                            <Border
                            x:Name="dropDownBorder"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="0"
                            CornerRadius="5">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas
                                        x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                            <Rectangle
                                            x:Name="opaqueRect"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                            Fill="{Binding Background, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}"/>
                    <Border
                    x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{StaticResource TextBox.Static.Background}"
                    CornerRadius="5">
                        <TextBox
                        x:Name="PART_EditableTextBox"
                        Margin="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ComboBoxEditableTextBox}"/>
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="border" Property="Opacity" Value="0.56"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
                        <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="False">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="True"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    </Grid.ColumnDefinitions>
                    <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    Margin="1"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome
                        x:Name="shadow"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        CornerRadius="5"
                        Color="Transparent">
                            <Border
                            x:Name="dropDownBorder"
                            CornerRadius="5"
                            Background="#FF2A2A32"
                            BorderBrush="#444444"
                            BorderThickness="1">

                                <Border CornerRadius="5">
                                    <Grid Background="Transparent">
                                        <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource CustomScrollViewer}">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas
                                                x:Name="canvas"
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                    <Rectangle
                                                    x:Name="opaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                    Fill="Transparent"/>
                                                </Canvas>
                                                <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="None"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Grid>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}"/>
                    <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="False"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
                        <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="False">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="True"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="CustomScrollViewer" TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border>
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="FloralWhite"/>
                                    </Border.BorderBrush>
                                    <ScrollContentPresenter CanContentScroll="False"/>
                                </Border>
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Style="{DynamicResource ScrollBarStyle}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Style="{DynamicResource ScrollBarStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="border" CornerRadius="4" Background="Gray" BorderBrush="{TemplateBinding BorderBrush}" Width="8" Margin="0"/>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#6b6b6b"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="0"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="0"/>
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent"/>
                    <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18"/>
                        <ColumnDefinition Width="0.00001*"/>
                        <ColumnDefinition MaxWidth="18"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                    <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>
            <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="18"/>
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="auto"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,3,5,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="True">
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border" CornerRadius="5" Padding="6,4,6,4">
                                <Border>
                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                    <ContentPresenter/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#1C1B22"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="Border">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#1C1B22"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxItemStyleSelected" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border" CornerRadius="5" Padding="6,4,6,4" Background="#1C1B22">
                                <Border>
                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                    <ContentPresenter/>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="StandardButton.Static.Background" ImageSource="Resources\StandardButton.png"/>
            <Style x:Key="StandardButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource StandardButton.Static.Background}"/>
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            CornerRadius="5">
                                <Grid>
                                    <Border x:Name="buttonFade" Background="Black" Opacity="0.2" CornerRadius="5"/>

                                    <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0" To="0.2"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.4"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0" To="0.4"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ProgressBar.Progress" Color="#720000"/>
            <SolidColorBrush x:Key="ProgressBar.Background" Color="#FF2A2A32"/>
            <SolidColorBrush x:Key="ProgressBar.Border" Color="#DB111C"/>
            <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
                <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"/>
                                <Rectangle x:Name="PART_Track"/>
                                <Grid
                                x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                ClipToBounds="True">
                                    <Rectangle
                                    x:Name="Indicator"
                                    Fill="{TemplateBinding Foreground}"
                                    RadiusX="5"
                                    RadiusY="5"/>
                                    <Rectangle
                                    x:Name="Animation"
                                    Fill="{TemplateBinding Foreground}"
                                    RadiusX="5"
                                    RadiusY="5"
                                    RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                    <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                    <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="MinimiseToSystemTray.Static.Background" ImageSource="Resources\MinimiseToSystemTray.png"/>
            <Style x:Key="MinimiseToSystemTrayButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource MinimiseToSystemTray.Static.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">

                                <Border>
                                    <Grid>
                                        <Border x:Name="buttonFade" Background="Black" Opacity="0"/>

                                        <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.2"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0" To="0.2"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.4"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0.4"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="Minimise.Static.Background" ImageSource="Resources\Minimise.png"/>
            <Style x:Key="MinimiseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Minimise.Static.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">

                                <Border>
                                    <Grid>
                                        <Border x:Name="buttonFade" Background="Black" Opacity="0"/>

                                        <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.2"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0" To="0.2"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.4"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0.4"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="Exit.Static.Background" ImageSource="Resources\Exit.png"/>
            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Exit.Static.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">

                                <Border>
                                    <Grid>
                                        <Border x:Name="buttonFade" Background="Black" Opacity="0"/>

                                        <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.2"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0" To="0.2"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.4"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.2" To="0.4"
                                                             Duration="0:0:0.1"
                                                             AccelerationRatio="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="buttonFade" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DiscordImageStyle" TargetType="{x:Type Image}">
                <Setter Property="FlowDirection" Value="LeftToRight"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ImageBrush x:Key="Discord.Static.Background" ImageSource="Resources\Discord.png"/>
            <ImageBrush x:Key="Discord.Hover.Background" ImageSource="Resources\Discord_Hover.png"/>
            <ImageBrush x:Key="Discord.Pressed.Background" ImageSource="Resources\Discord_Pressed.png"/>
            <Style x:Key="DiscordButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Discord.Static.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">

                                <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Discord.Hover.Background}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource Discord.Pressed.Background}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="UserBox.Static.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="UserBox.Static.Background" Color="#FF2A2A32"/>
            <SolidColorBrush x:Key="UserBox.Static.Foreground" Color="FloralWhite"/>
            <SolidColorBrush x:Key="UserBox.MouseOver.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="UserBox.Focus.Border" Color="Red"/>
            <VisualBrush
            x:Key="CueBannerBrush"
            AlignmentX="Left"
            AlignmentY="Center"
            Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="username" Foreground="FloralWhite"/>
                </VisualBrush.Visual>
            </VisualBrush>
            <Style x:Key="TextBoxPrimaryStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{StaticResource UserBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource UserBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource UserBox.Static.Foreground}"/>
                <Setter Property="BorderThickness" Value="2.5"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="True">

                                <Border CornerRadius="5">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource UserBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource UserBox.Focus.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="PassBox.Static.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="PassBox.Static.Background" Color="#FF2A2A32"/>
            <SolidColorBrush x:Key="PassBox.Static.Foreground" Color="FloralWhite"/>
            <SolidColorBrush x:Key="PassBox.MouseOver.Border" Color="#DB111C"/>
            <SolidColorBrush x:Key="PassBox.Focus.Border" Color="Red"/>
            <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                <Setter Property="PasswordChar" Value="*"/>
                <Setter Property="Background" Value="{StaticResource PassBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PassBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource PassBox.Static.Foreground}"/>
                <Setter Property="BorderThickness" Value="2.5"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="True">

                                <Border CornerRadius="5">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PassBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PassBox.Focus.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <ImageBrush x:Key="EnterButton.Static.Background" ImageSource="Resources\Arrow.png" Stretch="Uniform"/>
            <ImageBrush x:Key="EnterButton.MouseOver.Background" ImageSource="Resources\Arrow_Hover.png" Stretch="Uniform"/>
            <ImageBrush x:Key="EnterButton.Pressed.Background" ImageSource="Resources\Arrow_Pressed.png" Stretch="Uniform"/>
            <ImageBrush x:Key="EnterButton.Disabled" ImageSource="Resources\Arrow_Pressed.png" Stretch="Uniform"/>
            <Style x:Key="EnterButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource EnterButton.Static.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">

                                <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource EnterButton.MouseOver.Background}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource EnterButton.Pressed.Background}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource EnterButton.Disabled}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>