<Application x:Class="H1EmuLauncher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             Startup="ApplicationStartup">

    <Application.Resources>
        <ResourceDictionary>

            <!-- Load dictionary into xaml resources just so we can see on the designer -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Language\StringResources.en-EN.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <FontFamily x:Key="Signika">pack://application:,,,/Fonts/#Signika</FontFamily>
            <SolidColorBrush x:Key="LighterColour" Color="#FF2A2A32"/>
            <SolidColorBrush x:Key="DarkerColour" Color="#1C1B22"/>
            <SolidColorBrush x:Key="RedAccent" Color="#DB111C"/>
            <PathGeometry x:Key="ArrowIcon" Figures="M18.59 13H3a1 1 0 0 1 0-2h15.59l-5.3-5.3a1 1 0 1 1 1.42-1.4l7 7a1 1 0 0 1 0 1.4l-7 7a1 1 0 0 1-1.42-1.4l5.3-5.3z"/>
            <PathGeometry x:Key="PlayIcon" Figures="M3.9,18.9V5.1c0-1.6,1.7-2.6,3-1.8l12,6.9c1.4,0.8,1.4,2.9,0,3.7l-12,6.9C5.6,21.5,3.9,20.5,3.9,18.9z"/>
            <PathGeometry x:Key="FolderIcon" Figures="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"/>
            <PathGeometry x:Key="ShieldIcon" Figures="M18 5.41503L11.5 3.12091L5 5.41503V10.8184C5 13.4178 6.26292 15.8552 8.38653 17.3542L11.5 19.5519L14.6135 17.3542C16.7371 15.8552 18 13.4178 18 10.8184V5.41503ZM11.5 22L15.7668 18.9881C18.4213 17.1143 20 14.0677 20 10.8184V4L11.5 1L3 4V10.8184C3 14.0677 4.57865 17.1143 7.23317 18.9881L11.5 22Z"/>
            <PathGeometry x:Key="PadlockLockedIcon" Figures="M20,18v-4c0-1.9-1.3-3.4-3-3.9V7c0-2.8-2.2-5-5-5S7,4.2,7,7v3.1c-1.7,0.4-3,2-3,3.9v4c0,2.2,1.8,4,4,4h8   C18.2,22,20,20.2,20,18z M9,7c0-1.7,1.3-3,3-3s3,1.3,3,3v3H9V7z M6,18v-4c0-1.1,0.9-2,2-2h8c1.1,0,2,0.9,2,2v4c0,1.1-0.9,2-2,2H8   C6.9,20,6,19.1,6,18z"/>
            <PathGeometry x:Key="PadlockUnlockedIcon" Figures="M12,4c1.7,0,3,1.3,3,3c0,0.6,0.4,1,1,1s1-0.4,1-1c0-2.8-2.2-5-5-5S7,4.2,7,7v3.1c-1.7,0.4-3,2-3,3.9v4c0,2.2,1.8,4,4,4h8   c2.2,0,4-1.8,4-4v-4c0-2.2-1.8-4-4-4H9V7C9,5.3,10.3,4,12,4z M18,14v4c0,1.1-0.9,2-2,2H8c-1.1,0-2-0.9-2-2v-4c0-1.1,0.9-2,2-2h8   C17.1,12,18,12.9,18,14z"/>
            <PathGeometry x:Key="EditIcon" Figures="M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z"/>
            <PathGeometry x:Key="EyeIcon" Figures="M12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9C2.121 6.88 6.608 3 12 3zm0 16a9.005 9.005 0 0 0 8.777-7 9.005 9.005 0 0 0-17.554 0A9.005 9.005 0 0 0 12 19zm0-2.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm0-2a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z"/>
            <PathGeometry x:Key="EyeHideIcon" Figures="M17.882 19.297A10.949 10.949 0 0 1 12 21c-5.392 0-9.878-3.88-10.819-9a10.982 10.982 0 0 1 3.34-6.066L1.392 2.808l1.415-1.415 19.799 19.8-1.415 1.414-3.31-3.31zM5.935 7.35A8.965 8.965 0 0 0 3.223 12a9.005 9.005 0 0 0 13.201 5.838l-2.028-2.028A4.5 4.5 0 0 1 8.19 9.604L5.935 7.35zm6.979 6.978l-3.242-3.242a2.5 2.5 0 0 0 3.241 3.241zm7.893 2.264l-1.431-1.43A8.935 8.935 0 0 0 20.777 12 9.005 9.005 0 0 0 9.552 5.338L7.974 3.76C9.221 3.27 10.58 3 12 3c5.392 0 9.878 3.88 10.819 9a10.947 10.947 0 0 1-2.012 4.592zm-9.084-9.084a4.5 4.5 0 0 1 4.769 4.769l-4.77-4.769z"/>
            <PathGeometry x:Key="KeyIcon" Figures="M56.629,379.2c-14.09,14.071-14.09,36.975,0,51.055  c14.08,14.087,36.981,14.087,50.965,0l10.177-10.08l42.438,42.428c7.257,7.268,18.888,7.268,26.155,0l63.244-63.244  c7.268-7.255,7.268-18.89,0-26.157l-42.429-42.427l75.586-75.682c16.174,8.357,34.61,13.075,54.059,13.075  c65.234,0,118.111-52.869,118.111-118.109c0-65.232-52.877-118.111-118.111-118.111c-65.238,0-118.11,52.879-118.11,118.111  c0,19.449,4.721,37.886,13.077,54.06L56.629,379.2z M291.396,150.059c0-25.075,20.354-45.429,45.427-45.429  c25.076,0,45.426,20.354,45.426,45.429s-20.35,45.426-45.426,45.426C311.751,195.485,291.396,175.133,291.396,150.059z"/>
            <PathGeometry x:Key="LanguageIcon" Figures="M478.33,433.6l-90-218a22,22,0,0,0-40.67,0l-90,218a22,22,0,1,0,40.67,16.79L316.66,406H419.33l18.33,44.39A22,22,0,0,0,458,464a22,22,0,0,0,20.32-30.4ZM334.83,362,368,281.65,401.17,362Z M267.84,342.92a22,22,0,0,0-4.89-30.7c-.2-.15-15-11.13-36.49-34.73,39.65-53.68,62.11-114.75,71.27-143.49H330a22,22,0,0,0,0-44H214V70a22,22,0,0,0-44,0V90H54a22,22,0,0,0,0,44H251.25c-9.52,26.95-27.05,69.5-53.79,108.36-31.41-41.68-43.08-68.65-43.17-68.87a22,22,0,0,0-40.58,17c.58,1.38,14.55,34.23,52.86,83.93.92,1.19,1.83,2.35,2.74,3.51-39.24,44.35-77.74,71.86-93.85,80.74a22,22,0,1,0,21.07,38.63c2.16-1.18,48.6-26.89,101.63-85.59,22.52,24.08,38,35.44,38.93,36.1a22,22,0,0,0,30.75-4.9Z"/>
            <PathGeometry x:Key="BinIcon" Figures="M432 80h-82.38l-34-56.75C306.1 8.827 291.4 0 274.6 0H173.4C156.6 0 141 8.827 132.4 23.25L98.38 80H16C7.125 80 0 87.13 0 96v16C0 120.9 7.125 128 16 128H32v320c0 35.35 28.65 64 64 64h256c35.35 0 64-28.65 64-64V128h16C440.9 128 448 120.9 448 112V96C448 87.13 440.9 80 432 80zM171.9 50.88C172.9 49.13 174.9 48 177 48h94c2.125 0 4.125 1.125 5.125 2.875L293.6 80H154.4L171.9 50.88zM352 464H96c-8.837 0-16-7.163-16-16V128h288v320C368 456.8 360.8 464 352 464zM224 416c8.844 0 16-7.156 16-16V192c0-8.844-7.156-16-16-16S208 183.2 208 192v208C208 408.8 215.2 416 224 416zM144 416C152.8 416 160 408.8 160 400V192c0-8.844-7.156-16-16-16S128 183.2 128 192v208C128 408.8 135.2 416 144 416zM304 416c8.844 0 16-7.156 16-16V192c0-8.844-7.156-16-16-16S288 183.2 288 192v208C288 408.8 295.2 416 304 416z"/>
            <PathGeometry x:Key="XIcon" Figures="M10.17,10l3.89-3.89a.37.37,0,1,0-.53-.53L9.64,9.43,5.75,5.54a.37.37,0,1,0-.53.53L9.11,10,5.22,13.85a.37.37,0,0,0,0,.53.34.34,0,0,0,.26.11.36.36,0,0,0,.27-.11l3.89-3.89,3.89,3.89a.34.34,0,0,0,.26.11.35.35,0,0,0,.27-.11.37.37,0,0,0,0-.53Z"/>
            <PathGeometry x:Key="CopyIcon" Figures="M10 4C9.44772 4 9 4.44772 9 5V15C9 15.5523 9.44772 16 10 16H18C18.5523 16 19 15.5523 19 15V11C19 10.4477 18.5523 10 18 10H14C13.4477 10 13 9.55228 13 9V5C13 4.44772 12.5523 4 12 4H10ZM14.0632 2C14.9536 2 15.7979 2.39547 16.3679 3.07945L20.3047 7.80355C20.754 8.34269 21 9.02229 21 9.7241V15C21 16.6569 19.6569 18 18 18V19C18 20.6569 16.6569 22 15 22H6C4.34315 22 3 20.6569 3 19V9C3 7.34315 4.34315 6 6 6H7V5C7 3.34315 8.34315 2 10 2H14.0632ZM7 8H6C5.44772 8 5 8.44772 5 9V19C5 19.5523 5.44772 20 6 20H15C15.5523 20 16 19.5523 16 19V18H10C8.34315 18 7 16.6569 7 15V8ZM17.865 8L14.961 4.51531C14.9867 4.67308 15 4.83499 15 5V8H17.865Z"/>
            <PathGeometry x:Key="TickIcon" Figures="M 0 5 L 5 10 L 14 0"/>
            <PathGeometry x:Key="SettingsIcon" Figures="M262.29,192.31a64,64,0,1,0,57.4,57.4A64.13,64.13,0,0,0,262.29,192.31ZM416.39,256a154.34,154.34,0,0,1-1.53,20.79l45.21,35.46A10.81,10.81,0,0,1,462.52,326l-42.77,74a10.81,10.81,0,0,1-13.14,4.59l-44.9-18.08a16.11,16.11,0,0,0-15.17,1.75A164.48,164.48,0,0,1,325,400.8a15.94,15.94,0,0,0-8.82,12.14l-6.73,47.89A11.08,11.08,0,0,1,298.77,470H213.23a11.11,11.11,0,0,1-10.69-8.87l-6.72-47.82a16.07,16.07,0,0,0-9-12.22,155.3,155.3,0,0,1-21.46-12.57,16,16,0,0,0-15.11-1.71l-44.89,18.07a10.81,10.81,0,0,1-13.14-4.58l-42.77-74a10.8,10.8,0,0,1,2.45-13.75l38.21-30a16.05,16.05,0,0,0,6-14.08c-.36-4.17-.58-8.33-.58-12.5s.21-8.27.58-12.35a16,16,0,0,0-6.07-13.94l-38.19-30A10.81,10.81,0,0,1,49.48,186l42.77-74a10.81,10.81,0,0,1,13.14-4.59l44.9,18.08a16.11,16.11,0,0,0,15.17-1.75A164.48,164.48,0,0,1,187,111.2a15.94,15.94,0,0,0,8.82-12.14l6.73-47.89A11.08,11.08,0,0,1,213.23,42h85.54a11.11,11.11,0,0,1,10.69,8.87l6.72,47.82a16.07,16.07,0,0,0,9,12.22,155.3,155.3,0,0,1,21.46,12.57,16,16,0,0,0,15.11,1.71l44.89-18.07a10.81,10.81,0,0,1,13.14,4.58l42.77,74a10.8,10.8,0,0,1-2.45,13.75l-38.21,30a16.05,16.05,0,0,0-6.05,14.08C416.17,247.67,416.39,251.83,416.39,256Z"/>
            <PathGeometry x:Key="LoadingIcon" Figures="M4 24C4 35.0457 12.9543 44 24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4"/>
            <PathGeometry x:Key="MinimiseIcon" Figures="M5 12H12H19"/>
            <PathGeometry x:Key="MinimiseToSystemTrayIcon" Figures="M48.5,20.8C43.4,25.9,38.4,31,33.3,36.1c-0.3,0.3-0.5,0.5-0.8,0.8c-4.6-4.6-9.2-9.2-13.9-13.9c-0.7-0.7-1.5-1.5-2.2-2.2  c-1.8-1.8-4.7,1-2.8,2.8c5.1,5.1,10.2,10.2,15.3,15.3c0.7,0.7,1.5,1.5,2.2,2.2c0.8,0.8,2.1,0.8,2.8,0C39,36,44.1,31,49.2,25.9  c0.7-0.7,1.5-1.5,2.2-2.2C53.2,21.9,50.4,19,48.5,20.8z"/>
            <PathGeometry x:Key="RightArrowIcon" Figures="M0.062 128.25L383.812 512 0.062 895.75V128.25z"/>
            <PathGeometry x:Key="LeftArrowIcon" Figures="M0 511.875l383.75 383.75v-767.5L0 511.875z"/>
            <PathGeometry x:Key="ExitIcon" Figures="M41.7,23.3l-8.5-8.5c-0.4-0.4-1-0.4-1.4,0c-0.4,0.4-0.4,1,0,1.4l6.8,6.8H19.1c-0.6,0-1,0.4-1,1s0.4,1,1,1h19.4l-6.8,6.8   c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l8.5-8.5c0.2-0.2,0.3-0.4,0.3-0.7S41.9,23.5,41.7,23.3z M26.1,34.3c-0.5,0-0.9,0.4-0.9,0.9V39c0,0.6-0.5,1.1-1.1,1.1H9c-0.6,0-1.1-0.5-1.1-1.1V9c0-0.6,0.5-1.1,1.1-1.1h15.2   c0.6,0,1.1,0.5,1.1,1.1v3.9c0,0.5,0.4,0.9,0.9,0.9s0.9-0.4,0.9-0.9V9c0-1.6-1.3-2.9-2.9-2.9H9C7.4,6.1,6.1,7.4,6.1,9v30   c0,1.6,1.3,2.9,2.9,2.9h15.2c1.6,0,2.9-1.3,2.9-2.9v-3.8C27,34.7,26.6,34.3,26.1,34.3z"/>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolTipStyle" TargetType="{x:Type ToolTip}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolTip}">
                            <Border Background="{DynamicResource DarkerColour}">
                                <Border BorderBrush="{DynamicResource LighterColour}"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        Padding="10,5,10,5"
                                        MaxWidth="500">

                                    <TextBlock Text="{TemplateBinding Content}"
                                               Foreground="FloralWhite"
                                               FontSize="16"
                                               FontFamily="Bahnschrift Light"
                                               TextWrapping="Wrap"
                                               Style="{DynamicResource TextBlockStyle}"/>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="8"
                                          Direction="-90"
                                          RenderingBias="Quality"
                                          ShadowDepth="1"
                                          Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AnimatedCheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <StackPanel Orientation="Horizontal">
                                <Border Name="CheckBoxBorder"
                                        Width="20"
                                        Height="20"
                                        Background="Transparent"
                                        BorderBrush="Gray"
                                        BorderThickness="2"
                                        CornerRadius="2">

                                    <Path Name="CheckMarkPath"
                                          Data="{DynamicResource TickIcon}"
                                          Stroke="FloralWhite"
                                          StrokeThickness="2"
                                          StrokeEndLineCap="Round"
                                          Opacity="0">

                                        <Path.RenderTransform>
                                            <ScaleTransform ScaleX="0.7"
                                                            ScaleY="0.7"
                                                            CenterX="10"
                                                            CenterY="14"/>

                                        </Path.RenderTransform>
                                    </Path>
                                </Border>

                                <!-- Text next to the checkbox -->
                                <ContentPresenter Content="{TemplateBinding Content}" 
                                                  VerticalAlignment="Bottom"
                                                  Margin="8,0,0,0"/>
                            </StackPanel>

                            <!-- Triggers -->
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="CheckBox.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMarkPath"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMarkPath"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckBoxBorder"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#707070"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckBoxBorder"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckBoxBorder"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="#606060"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckBoxBorder"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HyperLinkStyle" TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Hyperlink.Foreground).(SolidColorBrush.Color)"
                                                To="LightGray"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Hyperlink.Foreground).(SolidColorBrush.Color)"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Hyperlink.Foreground).(SolidColorBrush.Color)"
                                                To="DarkGray"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Hyperlink.Foreground).(SolidColorBrush.Color)"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseRightButtonDown">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Hyperlink.Foreground).(SolidColorBrush.Color)"
                                                To="DarkGray"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="PreviewMouseRightButtonUp">
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Hyperlink.Foreground).(SolidColorBrush.Color)"
                                                Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TabItemStyleFirst" TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
                                    Background="#16161b"
                                    CornerRadius="5,0,0,0"
                                    VerticalAlignment="Bottom"
                                    Height="30">

                                <Border CornerRadius="5,0,0,0">
                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>

                                    <Grid>
                                        <TextBlock x:Name="text"
                                                   Foreground="Gray"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center">
        
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="10,5,10,7"/>
                                        </TextBlock>

                                        <Rectangle x:Name="underline"
                                                   Fill="#DB111C"
                                                   Height="0"
                                                   VerticalAlignment="Bottom"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="#B3B3B3"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Height" Value="32"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="FloralWhite"
                                                                Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetName="border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="#1C1B22"
                                                                Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="underline"
                                                                 Storyboard.TargetProperty="Height"
                                                                 To="2"
                                                                 Duration="0:0:0.1"/>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="CornerRadius">

                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="5" TopRight="5"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetName="border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="border"
                                                                 Storyboard.TargetProperty="Height"
                                                                 Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="underline"
                                                                 Storyboard.TargetProperty="Height"
                                                                 Duration="0:0:0.1"/>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="CornerRadius">

                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="5" TopRight="0"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItemStyleMiddle" TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
                                    Background="#16161b"
                                    VerticalAlignment="Bottom"
                                    Height="30">

                                <Grid>
                                    <Grid.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Grid.Background>

                                    <TextBlock x:Name="text"
                                               Foreground="Gray"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                        
                                        <ContentPresenter ContentSource="Header"
                                                          Margin="10,5,10,7"/>
                                    </TextBlock>

                                    <Rectangle x:Name="underline"
                                               Fill="#DB111C"
                                               Height="0"
                                               VerticalAlignment="Bottom"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="#B3B3B3"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Height" Value="32"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="FloralWhite"
                                                                Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetName="border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="#1C1B22"
                                                                Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="underline"
                                                                 Storyboard.TargetProperty="Height"
                                                                 To="2"
                                                                 Duration="0:0:0.1"/>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="CornerRadius">

                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="5" TopRight="5"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetName="border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="border"
                                                                 Storyboard.TargetProperty="Height"
                                                                 Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="underline"
                                                                 Storyboard.TargetProperty="Height"
                                                                 Duration="0:0:0.1"/>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="CornerRadius">

                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="0" TopRight="0"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabItemStyleLast" TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
                                    Background="#16161b"
                                    CornerRadius="0,5,0,0"
                                    VerticalAlignment="Bottom"
                                    Height="30">

                                <Border CornerRadius="0,5,0,0">
                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>

                                    <Grid>
                                        <TextBlock x:Name="text"
                                                   Foreground="Gray"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center">
                        
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="10,5,10,7"/>
                                        </TextBlock>

                                        <Rectangle x:Name="underline"
                                                   Fill="#DB111C"
                                                   Height="0"
                                                   VerticalAlignment="Bottom"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="#B3B3B3"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="border" Property="Height" Value="32"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="FloralWhite"
                                                                Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetName="border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="#1C1B22"
                                                                Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="underline"
                                                                 Storyboard.TargetProperty="Height"
                                                                 To="2"
                                                                 Duration="0:0:0.1"/>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="CornerRadius">

                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="5" TopRight="5"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="text"
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetName="border"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="border"
                                                                 Storyboard.TargetProperty="Height"
                                                                 Duration="0:0:0.1"/>

                                                <DoubleAnimation Storyboard.TargetName="underline"
                                                                 Storyboard.TargetProperty="Height"
                                                                 Duration="0:0:0.1"/>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                               Storyboard.TargetProperty="CornerRadius">

                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="0" TopRight="5"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent"
                                    CornerRadius="10">
                                
                                <StackPanel Orientation="Horizontal">
                                    <Border x:Name="background"
                                            Background="{DynamicResource LighterColour}"
                                            CornerRadius="10"
                                            Width="38">
                                        
                                        <Border CornerRadius="10"
                                                Width="38">
                                            
                                            <Border.Background>
                                                <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                            </Border.Background>

                                            <Border x:Name="ellipse"
                                                    HorizontalAlignment="Left"
                                                    CornerRadius="8"
                                                    Margin="2"
                                                    Background="{DynamicResource DarkerColour}">

                                                <Ellipse Width="16">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                                    </Ellipse.Fill>
                                                    
                                                    <Ellipse.Effect>
                                                        <DropShadowEffect BlurRadius="15"
                                                                          Direction="-90"
                                                                          RenderingBias="Quality"
                                                                          ShadowDepth="0"
                                                                          Opacity="0.6"/>

                                                    </Ellipse.Effect>
                                                </Ellipse>
                                            </Border>
                                        </Border>
                                    </Border>
                                    
                                    <TextBlock x:Name="text"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Right"
                                               Margin="10,2,0,0"
                                               Foreground="FloralWhite"
                                               Text="{DynamicResource item204}">

                                    </TextBlock>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="text" Property="Text" Value="{DynamicResource item203}"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="background"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#DB111C" Duration="0:0:0.1"/>

                                            <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                                Storyboard.TargetProperty="Margin"
                                                                To="20,2,2,2"
                                                                Duration="0:0:0.1">

                                                <ThicknessAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="background"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#FF2A2A32"
                                                            Duration="0:0:0.1"/>

                                            <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                                Storyboard.TargetProperty="Margin"
                                                                Duration="0:0:0.1">

                                                <ThicknessAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CustomMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="Icon" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Margin="10,0,10,0" Background="Transparent">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter ContentSource="Icon" Width="16" Height="16" VerticalAlignment="Center" Margin="0,0,8,2"/>
                                    <ContentPresenter ContentSource="Header" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="LightGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="DarkGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">
                                                    
                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SeparatorMenuItem" TargetType="{x:Type Separator}">
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border>
                                <Rectangle Height="1" Fill="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border" Background="{DynamicResource DarkerColour}" BorderBrush="#444444" BorderThickness="1">
                                <Border Margin="0,4,0,2">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CarouselButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Opacity" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">

                                <Border x:Name="nextImageButtonContent">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 To="0.3"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#404040"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#303030"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#303030"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    Background="{StaticResource LighterColour}"
                                    BorderBrush="{StaticResource RedAccent}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">

                                <Border CornerRadius="5">
                                    <Border x:Name="splitBorder"
                                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                            Margin="0"
                                            HorizontalAlignment="Right"
                                            BorderBrush="Transparent"
                                            BorderThickness="1"
                                            CornerRadius="5"
                                            SnapsToDevicePixels="True">

                                        <Path x:Name="arrow"
                                              Margin="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                              Fill="FloralWhite"/>
                                    </Border>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    </Grid.ColumnDefinitions>
                    <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    Margin="1"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome
                        x:Name="shadow"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        CornerRadius="5"
                        Color="Transparent">
                            <Border
                            x:Name="dropDownBorder"
                            CornerRadius="5"
                            Background="{DynamicResource LighterColour}"
                            BorderBrush="#444444"
                            BorderThickness="1">

                                <Border CornerRadius="5">
                                    <Grid Background="Transparent">
                                        <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource CustomScrollViewer}">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas
                                                x:Name="canvas"
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                    <Rectangle
                                                    x:Name="opaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                    Fill="Transparent"/>
                                                </Canvas>
                                                <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="None"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Grid>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Grid.ColumnSpan="2"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}"/>
                    
                    <ContentPresenter x:Name="contentPresenter"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      IsHitTestVisible="False"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5"/>
                        <Setter TargetName="shadow" Property="Color" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="False">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="True"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="CustomScrollViewer" TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Border>
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="FloralWhite"/>
                                    </Border.BorderBrush>
                                    <ScrollContentPresenter CanContentScroll="False"/>
                                </Border>
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Column="1"
                                           Margin="20,0,0,0"
                                           Value="{TemplateBinding VerticalOffset}"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Style="{DynamicResource ScrollBarStyle}"/>
                                
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Margin="20,0,0,0"
                                           Value="{TemplateBinding HorizontalOffset}"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Style="{DynamicResource ScrollBarStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="border" Background="Gray" CornerRadius="4" Width="8" Margin="0">
                                <Border>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>

                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="8"
                                                      Direction="-90"
                                                      RenderingBias="Quality"
                                                      ShadowDepth="1"
                                                      Opacity="0.3"/>
                                </Border.Effect>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#707070"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#606060"
                                                            Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#707070"
                                                            Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseRightButtonDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#606060"
                                                            Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseRightButtonUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#707070"
                                                            Duration="0:0:0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="0"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="0"/>
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent"/>
                    <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18"/>
                        <ColumnDefinition Width="0.00001*"/>
                        <ColumnDefinition MaxWidth="18"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                    <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>
            <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="ContextMenu" Value="{x:Null}"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="18"/>
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="auto"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="6,3,5,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="True">
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Padding" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="border" Background="#00000000" CornerRadius="5" Padding="6,4,6,4">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#1C1B22"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#70000000"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseRightButtonDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#70000000"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseRightButtonUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="LostMouseCapture">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#00000000"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ImageBrush x:Key="PrimaryButton.Static.Background" ImageSource="Resources\PrimaryButton.png"/>
            <Style x:Key="PrimaryButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource PrimaryButton.Static.Background}"/>
                <Setter Property="FontFamily" Value="Arial Black"/>
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="5">

                                <Grid>
                                    <Border x:Name="buttonFade" Background="Black" Opacity="0.35" CornerRadius="5"/>

                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.55"
                                                                 Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                To="Gray"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.1"/>

                                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.15"
                                                             Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.55"
                                                             Duration="0:0:0.1"/>

                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                            To="Gray"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.1"/>

                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{StaticResource DarkerColour}"/>
                <Setter Property="Background" Value="{StaticResource LighterColour}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RedAccent}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="5">

                                    <Border>
                                        <Grid>
                                            <Rectangle x:Name="PART_Track"/>
                                            <Grid x:Name="PART_Indicator"
                                                  HorizontalAlignment="Left"
                                                  ClipToBounds="True">

                                                <Rectangle x:Name="Indicator"
                                                           Fill="{TemplateBinding Foreground}"/>

                                                <Rectangle x:Name="Animation"
                                                           Fill="{TemplateBinding Foreground}"
                                                           RenderTransformOrigin="0.5, 0.5">

                                                    <Rectangle.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                            </Grid>
                                        </Grid>
                                        
                                        <Border.Background>
                                            <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                        </Border.Background>
                                    </Border>
                                </Border>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5">
                                                        <EasingPointKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseInOut"/>
                                                        </EasingPointKeyFrame.EasingFunction>
                                                    </EasingPointKeyFrame>
                                                    <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5">
                                                        <EasingPointKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseInOut"/>
                                                        </EasingPointKeyFrame.EasingFunction>
                                                    </EasingPointKeyFrame>
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ProgressBarSmall" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{StaticResource DarkerColour}"/>
                <Setter Property="Background" Value="{StaticResource LighterColour}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="1">

                                    <Border>
                                        <Grid>
                                            <Rectangle x:Name="PART_Track"/>
                                            <Grid x:Name="PART_Indicator"
                                                  HorizontalAlignment="Left"
                                                  ClipToBounds="True">

                                                <Rectangle x:Name="Indicator"
                                                           Fill="{TemplateBinding Foreground}"/>

                                                <Rectangle x:Name="Animation"
                                                           Fill="{TemplateBinding Foreground}"
                                                           RenderTransformOrigin="0.5,0.5">

                                                    <Rectangle.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                            </Grid>
                                        </Grid>

                                        <Border.Background>
                                            <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                        </Border.Background>
                                    </Border>
                                </Border>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5">
                                                        <EasingPointKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseInOut"/>
                                                        </EasingPointKeyFrame.EasingFunction>
                                                    </EasingPointKeyFrame>
                                                    <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5">
                                                        <EasingPointKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseInOut"/>
                                                        </EasingPointKeyFrame.EasingFunction>
                                                    </EasingPointKeyFrame>
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15"
                                          Direction="-90"
                                          RenderingBias="Quality"
                                          ShadowDepth="0"
                                          Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">

                                <Border>
                                    <Grid>
                                        <Border x:Name="buttonFade" Background="Black" Opacity="0"/>

                                        <ContentPresenter x:Name="contentPresenter"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Focusable="False"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="LightGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="DarkGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="DarkGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="buttonFade"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DiscordButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15"
                                          Direction="-90"
                                          RenderingBias="Quality"
                                          ShadowDepth="0"
                                          Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">

                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                                 To="1.1"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                                 To="1.1"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#4e5bd9"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#454fbf"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="#454fbf"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TextBoxStyle.Static.Foreground" Color="FloralWhite"/>
            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{StaticResource LighterColour}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RedAccent}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBoxStyle.Static.Foreground}"/>
                <Setter Property="BorderThickness" Value="2.5"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="SelectionBrush" Value="{StaticResource DarkerColour}"/>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu Style="{DynamicResource ContextMenuStyle}">
                            <MenuItem Header="{DynamicResource item221}">
                                <MenuItem.Icon>
                                    <Path Data="{DynamicResource CopyIcon}"
                                          Fill="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(TextElement.Foreground)}"
                                          Stretch="Uniform"/>
                                </MenuItem.Icon>
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource CustomMenuItem}">

                                        <EventSetter Event="Click"
                                                     Handler="TextBoxContextMenuPasteClick"/>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">

                                <Border CornerRadius="5">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"/>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="PassBox.Static.Foreground" Color="FloralWhite"/>
            <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                <Setter Property="PasswordChar" Value="*"/>
                <Setter Property="Background" Value="{StaticResource LighterColour}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RedAccent}"/>
                <Setter Property="Foreground" Value="{StaticResource PassBox.Static.Foreground}"/>
                <Setter Property="BorderThickness" Value="2.5"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="SelectionBrush" Value="{StaticResource DarkerColour}"/>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu Style="{DynamicResource ContextMenuStyle}">
                            <MenuItem Header="{DynamicResource item221}">
                                <MenuItem.Icon>
                                    <Path Data="{DynamicResource CopyIcon}"
                                          Fill="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(TextElement.Foreground)}"
                                          Stretch="Uniform"/>
                                </MenuItem.Icon>
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource CustomMenuItem}">

                                        <EventSetter Event="Click"
                                                     Handler="TextBoxContextMenuPasteClick"/>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">

                                <Border CornerRadius="5">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"/>

                                    <Border.Background>
                                        <ImageBrush ImageSource="Resources\Grain.png" Opacity="0.5" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,512,512"/>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="PathButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="FloralWhite"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">

                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentSource="Content"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                                 To="1.2"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                                 To="1.2"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="LightGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                                 Duration="0:0:0.1">

                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="DarkGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="DarkGray"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.1">

                                                    <ColorAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>